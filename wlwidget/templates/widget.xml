<Module>
 <ModulePrefs title="Hello World!">
 <Require feature="opensocial-0.9" />
 <Require feature="osapi" />
 <Require feature="pubsub" />
 <Require feature="dynamic-height" />
 </ModulePrefs>
 <Content type="html" view="home">
 <![CDATA[
<script type="text/javascript" src="http://open-app.googlecode.com/files/openapp.js"></script>
<script type="text/javaScript">

    var MY_IDENTIFIER = Math.random();

    function trace(msg) {
        if (console && console.log) 
            console.log(msg);
    }

    function processMessages(e) {
        var ifr = document.getElementById('weblabIFrame');
        if(e.origin == 'http://cloud.weblab.deusto.es') {
            e.source.postMessage("I'm your parent", e.origin);
        }
    }

    var imMaster = false;

    function activateWidget(reservationId) {
        
    }

    function setUpMaster() {
        imMaster = true;
        var token = shindig.auth.getSecurityToken();
        var srcString = '{{ url }}?st=' + token;
        document.getElementById('container').innerHTML = '<iframe id="weblabIFrame" onload="gadgets.window.adjustHeight();" frameborder="0" width="100%" height="100%" src="'+srcString+'"></iframe>';
    }

    function setUpSlave() {
        document.getElementById('container').innerHTML = "Waiting for the master widget...";
    }

    var inLoadingPeriod  = true;
    var LOADING_TIME     = 400; // ms
    var imMasterTemporal = false; // During the loading period, see if I'm gonna be one
    var forceNotMaster   = false; // If after the loading time, somebody comes back, define "no, you're not the master"

    function onEvent(envelope, message) {
        // Solving who is the master: there are two periods: the first one, short (LOADING_TIME), on which all the widgets send a message.
        // The last message received by everybody will be the master. So everybody will think that they're the master until they receive
        // a message defining that they're not. If in LOADING_TIME no more systems define that they're the master, they everyone know that
        // they're the master. If later somebody comes in and says "hey, I'm the master", they will receive a message defining "no, you're 
        // not".
        if (message["wlwidget-msg"] == 'wlwidget::master-solver') {
            if (inLoadingPeriod) {
                trace("Still loading: I'm " + MY_IDENTIFIER + "; got: " + message['wlwidget-id']);
                
                if( forceNotMaster )
                    return true;

                if (message['wlwidget-id'] == MY_IDENTIFIER) {
                    imMasterTemporal = true;
                } else {
                    imMasterTemporal = false;
                }
            } else {
                trace("Not loading anymore: force not master");

                gadgets.openapp.publish({
                    event: "select",
                    type: "json",
                    message: {
                        'wlwidget-msg' : 'wlwidget::not-master',
                        'wlwidget-id'     : MY_IDENTIFIER, 
                    }
                });
            }
        } else if (message["wlwidget-msg"] == 'wlwidget::not-master') {
            trace("Got a force not master");
            forceNotMaster = true;
            onLoadingTimeElapsed();
        } else if (message["wlwidget-msg"] == 'wlwidget::activate') {
            if (!imMaster ) {
                activateWidget(message['wlwidget-reservation-id']);
            }
        }
        return true;
    }

    function onLoadingTimeElapsed() {
        if ( !inLoadingPeriod )
            return;

        inLoadingPeriod = false;
        trace("Loading time elapsed: " + new Date().getTime() + "; force not master: " + forceNotMaster + "; imMasterTemporal: " + imMasterTemporal);

        if (forceNotMaster) {
            setUpSlave();
        } else {
            if(imMasterTemporal) {
                setUpMaster();
            } else {
                setUpSlave();
            }
        }
    }

    function init() {
        
        // Register event listener
        window.addEventListener('message', processMessages, false);

        // Adjust height
        gadgets.window.adjustHeight();

        gadgets.openapp.publish({
            event: "select",
            type: "json",
            message: {
                'wlwidget-msg' : 'wlwidget::master-solver',
                'wlwidget-id'     : MY_IDENTIFIER, 
            }
        });

        trace("Submitted " + MY_IDENTIFIER + "; now configuring timer: " + new Date().getTime());
        setTimeout(function(){ onLoadingTimeElapsed(); }, LOADING_TIME);
        gadgets.openapp.connect(onEvent);
    }

    gadgets.util.registerOnLoadHandler(init);
</script>
 <div id="container">
 </div>
 ]]>
</Content>
</Module>
